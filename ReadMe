Building the image

docker build -t personnel .


running the image

docker run -d -p 8080:80 --name MyWebsite personnel


open this link

https://madanreddy123.github.io/NewWebsiteShowingTheProfessionalDetails/

     import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Base64;
import java.util.HashMap;
import java.util.Map;

import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

public class ZephyrIntegration {

    private final String baseUrl;
    private final String username;
    private final String apiToken;
    private final String accessKey;
    private final String auth;

    private static final Map<String, String> TAG_TO_ZEPHYR_STATUS = new HashMap<>();
    static {
        TAG_TO_ZEPHYR_STATUS.put("status-pass", "1"); // Zephyr status code for Pass
        TAG_TO_ZEPHYR_STATUS.put("status-fail", "2"); // Zephyr status code for Fail
        TAG_TO_ZEPHYR_STATUS.put("status-wip", "3");  // Zephyr status code for Work in Progress
        TAG_TO_ZEPHYR_STATUS.put("status-blocked", "4"); // Zephyr status code for Blocked
    }

    public ZephyrIntegration(String baseUrl, String username, String apiToken, String accessKey) {
        this.baseUrl = baseUrl;
        this.username = username;
        this.apiToken = apiToken;
        this.accessKey = accessKey;
        this.auth = Base64.getEncoder().encodeToString((username + ":" + apiToken).getBytes());
    }

    public void updateTestResults(String jsonReportPath) throws IOException {
        File jsonReport = new File(jsonReportPath);
        String json = new String(Files.readAllBytes(jsonReport.toPath()));

        // Parse JSON and update Zephyr
        updateTestResultsInZephyr(json);
    }

    private void updateTestResultsInZephyr(String json) throws IOException {
        ObjectMapper objectMapper = new ObjectMapper();
        JsonNode rootNode = objectMapper.readTree(json);

        for (JsonNode featureNode : rootNode) {
            for (JsonNode elementNode : featureNode.path("elements")) {
                String testCaseKey = null;
                String status = null;

                for (JsonNode tagNode : elementNode.path("tags")) {
                    String tagName = tagNode.path("name").asText();
                    if (tagName.startsWith("@zephyr-test-id-")) {
                        testCaseKey = tagName.replace("@zephyr-test-id-", "");
                    } else if (TAG_TO_ZEPHYR_STATUS.containsKey(tagName)) {
                        status = TAG_TO_ZEPHYR_STATUS.get(tagName);
                    }
                }

                if (testCaseKey != null && status != null) {
                    updateZephyrExecutionStatus(testCaseKey, status);
                }
            }
        }
    }

    private void updateZephyrExecutionStatus(String testCaseKey, String status) throws IOException {
        CloseableHttpClient httpClient = HttpClients.createDefault();
        HttpPost request = new HttpPost(baseUrl + "rest/zapi/latest/execution");
        request.setHeader("Authorization", "Basic " + auth);
        request.setHeader("Content-Type", "application/json");
        request.setHeader("zapiAccessKey", accessKey);

        String jsonPayload = String.format("{\"status\": \"%s\", \"testCaseKey\": \"%s\"}", status, testCaseKey);
        StringEntity params = new StringEntity(jsonPayload);
        request.setEntity(params);

        CloseableHttpResponse response = httpClient.execute(request);
        System.out.println(EntityUtils.toString(response.getEntity()));
    }

    public static void main(String[] args) {
        try {
            String baseUrl = "https://dafm-gov-ie.atlassian.net/";
            String username = "your_username";
            String apiToken = "your_api_token";
            String accessKey = "your_access_key";
            String jsonReportPath = "target/cucumber-reports/Cucumber.json";

            ZephyrIntegration zephyrIntegration = new ZephyrIntegration(baseUrl, username, apiToken, accessKey);
            zephyrIntegration.updateTestResults(jsonReportPath);

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}